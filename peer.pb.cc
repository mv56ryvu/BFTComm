// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: peer.proto

#include "peer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_authenticator_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_authenticator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Authenticator;
}  // namespace protobuf_authenticator_2eproto
namespace protobuf_peer_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_peer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CertificateMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_peer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PeerMessage;
}  // namespace protobuf_peer_2eproto
namespace bftmessages {
class PeerMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PeerMessage>
      _instance;
} _PeerMessage_default_instance_;
class CertificateMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CertificateMessage>
      _instance;
} _CertificateMessage_default_instance_;
class PayloadNewConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PayloadNewConfig>
      _instance;
} _PayloadNewConfig_default_instance_;
class PayloadSyncStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PayloadSyncState>
      _instance;
} _PayloadSyncState_default_instance_;
class ConfigMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigMessage>
      _instance;
} _ConfigMessage_default_instance_;
class SendMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendMessage>
      _instance;
} _SendMessage_default_instance_;
class ReceivedMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReceivedMessage>
      _instance;
} _ReceivedMessage_default_instance_;
}  // namespace bftmessages
namespace protobuf_peer_2eproto {
static void InitDefaultsPeerMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bftmessages::_PeerMessage_default_instance_;
    new (ptr) ::bftmessages::PeerMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bftmessages::PeerMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PeerMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPeerMessage}, {
      &protobuf_authenticator_2eproto::scc_info_Authenticator.base,}};

static void InitDefaultsCertificateMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bftmessages::_CertificateMessage_default_instance_;
    new (ptr) ::bftmessages::CertificateMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bftmessages::CertificateMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CertificateMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCertificateMessage}, {
      &protobuf_peer_2eproto::scc_info_PeerMessage.base,}};

static void InitDefaultsPayloadNewConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bftmessages::_PayloadNewConfig_default_instance_;
    new (ptr) ::bftmessages::PayloadNewConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bftmessages::PayloadNewConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PayloadNewConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPayloadNewConfig}, {}};

static void InitDefaultsPayloadSyncState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bftmessages::_PayloadSyncState_default_instance_;
    new (ptr) ::bftmessages::PayloadSyncState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bftmessages::PayloadSyncState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PayloadSyncState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPayloadSyncState}, {
      &protobuf_peer_2eproto::scc_info_CertificateMessage.base,
      &protobuf_peer_2eproto::scc_info_PeerMessage.base,}};

static void InitDefaultsConfigMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bftmessages::_ConfigMessage_default_instance_;
    new (ptr) ::bftmessages::ConfigMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bftmessages::ConfigMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigMessage}, {}};

static void InitDefaultsSendMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bftmessages::_SendMessage_default_instance_;
    new (ptr) ::bftmessages::SendMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bftmessages::SendMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SendMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSendMessage}, {
      &protobuf_peer_2eproto::scc_info_PeerMessage.base,
      &protobuf_authenticator_2eproto::scc_info_Authenticator.base,}};

static void InitDefaultsReceivedMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bftmessages::_ReceivedMessage_default_instance_;
    new (ptr) ::bftmessages::ReceivedMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bftmessages::ReceivedMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReceivedMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReceivedMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PeerMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CertificateMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PayloadNewConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PayloadSyncState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReceivedMessage.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PeerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PeerMessage, fromnodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PeerMessage, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PeerMessage, epochid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PeerMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PeerMessage, attacheddata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PeerMessage, auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::CertificateMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::CertificateMessage, initialized_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::CertificateMessage, cntprepared_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::CertificateMessage, certificates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PayloadNewConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PayloadNewConfig, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PayloadNewConfig, leader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PayloadNewConfig, digeststate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PayloadNewConfig, digestp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PayloadSyncState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PayloadSyncState, clients_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PayloadSyncState, certificate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::PayloadSyncState, newconfigmessage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, baseport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, nodecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, baseports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, outgoingdohash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, outgoingdosign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, incomingdohash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, incomingverifysign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, hashalg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ConfigMessage, signalg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::SendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::SendMessage, nodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::SendMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::SendMessage, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::SendMessage, signs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ReceivedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ReceivedMessage, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bftmessages::ReceivedMessage, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bftmessages::PeerMessage)},
  { 11, -1, sizeof(::bftmessages::CertificateMessage)},
  { 19, -1, sizeof(::bftmessages::PayloadNewConfig)},
  { 28, -1, sizeof(::bftmessages::PayloadSyncState)},
  { 36, -1, sizeof(::bftmessages::ConfigMessage)},
  { 52, -1, sizeof(::bftmessages::SendMessage)},
  { 61, -1, sizeof(::bftmessages::ReceivedMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bftmessages::_PeerMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bftmessages::_CertificateMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bftmessages::_PayloadNewConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bftmessages::_PayloadSyncState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bftmessages::_ConfigMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bftmessages::_SendMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bftmessages::_ReceivedMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "peer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\npeer.proto\022\013bftmessages\032\023authenticator"
      ".proto\"\245\001\n\013PeerMessage\022\022\n\nfromNodeId\030\001 \001"
      "(\005\022\r\n\005msgId\030\002 \001(\005\022\017\n\007epochId\030\003 \001(\005\022\"\n\004ty"
      "pe\030\004 \001(\0162\024.bftmessages.MsgType\022\024\n\014attach"
      "edData\030\005 \001(\014\022(\n\004auth\030\006 \003(\0132\032.bftmessages"
      ".Authenticator\"n\n\022CertificateMessage\022\023\n\013"
      "initialized\030\001 \001(\010\022\023\n\013cntPrepared\030\002 \001(\005\022."
      "\n\014certificates\030\003 \003(\0132\030.bftmessages.PeerM"
      "essage\"Y\n\020PayloadNewConfig\022\017\n\007members\030\001 "
      "\003(\005\022\016\n\006leader\030\002 \001(\005\022\023\n\013digestState\030\003 \001(\014"
      "\022\017\n\007digestP\030\004 \001(\014\"\215\001\n\020PayloadSyncState\022\017"
      "\n\007clients\030\001 \003(\005\0224\n\013certificate\030\002 \001(\0132\037.b"
      "ftmessages.CertificateMessage\0222\n\020newConf"
      "igMessage\030\003 \001(\0132\030.bftmessages.PeerMessag"
      "e\"\357\001\n\rConfigMessage\022\020\n\010basePort\030\001 \001(\005\022\021\n"
      "\tnodeCount\030\002 \001(\005\022\r\n\005roles\030\003 \003(\005\022\021\n\taddre"
      "sses\030\004 \003(\t\022\021\n\tbasePorts\030\005 \003(\005\022\026\n\016outgoin"
      "gDoHash\030\006 \001(\010\022\026\n\016outgoingDoSign\030\007 \001(\010\022\026\n"
      "\016incomingDoHash\030\010 \001(\010\022\032\n\022incomingVerifyS"
      "ign\030\t \001(\010\022\017\n\007hashAlg\030\n \001(\t\022\017\n\007signAlg\030\013 "
      "\001(\t\"\201\001\n\013SendMessage\022\016\n\006nodeId\030\001 \003(\005\022)\n\007m"
      "essage\030\002 \001(\0132\030.bftmessages.PeerMessage\022\014"
      "\n\004hash\030\003 \001(\014\022)\n\005signs\030\004 \003(\0132\032.bftmessage"
      "s.Authenticator\"Q\n\017ReceivedMessage\022-\n\007ch"
      "annel\030\001 \001(\0162\034.bftmessages.ReceivedChanne"
      "l\022\017\n\007message\030\002 \001(\014*\240\001\n\007MsgType\022\021\n\rClient"
      "Request\020\000\022\022\n\016ClientResponse\020\001\022\016\n\nPrePrep"
      "are\020\002\022\013\n\007Prepare\020\003\022\n\n\006Commit\020\004\022\016\n\nCheckp"
      "oint\020\005\022\t\n\005Probe\020\006\022\014\n\010ProbeAck\020\007\022\r\n\tNewCo"
      "nfig\020\010\022\r\n\tSyncState\020\t*2\n\017ReceivedChannel"
      "\022\n\n\006Client\020\000\022\010\n\004Peer\020\001\022\t\n\005Coord\020\002B\rZ\013bft"
      "messagesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1256);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "peer.proto", &protobuf_RegisterTypes);
  ::protobuf_authenticator_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_peer_2eproto
namespace bftmessages {
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_peer_2eproto::file_level_enum_descriptors[0];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReceivedChannel_descriptor() {
  protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_peer_2eproto::file_level_enum_descriptors[1];
}
bool ReceivedChannel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PeerMessage::InitAsDefaultInstance() {
}
void PeerMessage::clear_auth() {
  auth_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerMessage::kFromNodeIdFieldNumber;
const int PeerMessage::kMsgIdFieldNumber;
const int PeerMessage::kEpochIdFieldNumber;
const int PeerMessage::kTypeFieldNumber;
const int PeerMessage::kAttachedDataFieldNumber;
const int PeerMessage::kAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerMessage::PeerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_peer_2eproto::scc_info_PeerMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bftmessages.PeerMessage)
}
PeerMessage::PeerMessage(const PeerMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      auth_(from.auth_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attacheddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attacheddata().size() > 0) {
    attacheddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attacheddata_);
  }
  ::memcpy(&fromnodeid_, &from.fromnodeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&fromnodeid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:bftmessages.PeerMessage)
}

void PeerMessage::SharedCtor() {
  attacheddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fromnodeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&fromnodeid_)) + sizeof(type_));
}

PeerMessage::~PeerMessage() {
  // @@protoc_insertion_point(destructor:bftmessages.PeerMessage)
  SharedDtor();
}

void PeerMessage::SharedDtor() {
  attacheddata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PeerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PeerMessage::descriptor() {
  ::protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PeerMessage& PeerMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_peer_2eproto::scc_info_PeerMessage.base);
  return *internal_default_instance();
}


void PeerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:bftmessages.PeerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auth_.Clear();
  attacheddata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fromnodeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&fromnodeid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool PeerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bftmessages.PeerMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 fromNodeId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fromnodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 msgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 epochId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epochid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bftmessages.MsgType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::bftmessages::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attachedData = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attacheddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bftmessages.Authenticator auth = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bftmessages.PeerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bftmessages.PeerMessage)
  return false;
#undef DO_
}

void PeerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bftmessages.PeerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fromNodeId = 1;
  if (this->fromnodeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fromnodeid(), output);
  }

  // int32 msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->msgid(), output);
  }

  // int32 epochId = 3;
  if (this->epochid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->epochid(), output);
  }

  // .bftmessages.MsgType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // bytes attachedData = 5;
  if (this->attacheddata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->attacheddata(), output);
  }

  // repeated .bftmessages.Authenticator auth = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auth_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->auth(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bftmessages.PeerMessage)
}

::google::protobuf::uint8* PeerMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bftmessages.PeerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fromNodeId = 1;
  if (this->fromnodeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fromnodeid(), target);
  }

  // int32 msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->msgid(), target);
  }

  // int32 epochId = 3;
  if (this->epochid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->epochid(), target);
  }

  // .bftmessages.MsgType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // bytes attachedData = 5;
  if (this->attacheddata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->attacheddata(), target);
  }

  // repeated .bftmessages.Authenticator auth = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auth_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->auth(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bftmessages.PeerMessage)
  return target;
}

size_t PeerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bftmessages.PeerMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bftmessages.Authenticator auth = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->auth_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->auth(static_cast<int>(i)));
    }
  }

  // bytes attachedData = 5;
  if (this->attacheddata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attacheddata());
  }

  // int32 fromNodeId = 1;
  if (this->fromnodeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromnodeid());
  }

  // int32 msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgid());
  }

  // int32 epochId = 3;
  if (this->epochid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->epochid());
  }

  // .bftmessages.MsgType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PeerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bftmessages.PeerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PeerMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PeerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bftmessages.PeerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bftmessages.PeerMessage)
    MergeFrom(*source);
  }
}

void PeerMessage::MergeFrom(const PeerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bftmessages.PeerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auth_.MergeFrom(from.auth_);
  if (from.attacheddata().size() > 0) {

    attacheddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attacheddata_);
  }
  if (from.fromnodeid() != 0) {
    set_fromnodeid(from.fromnodeid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.epochid() != 0) {
    set_epochid(from.epochid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void PeerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bftmessages.PeerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PeerMessage::CopyFrom(const PeerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bftmessages.PeerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeerMessage::IsInitialized() const {
  return true;
}

void PeerMessage::Swap(PeerMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerMessage::InternalSwap(PeerMessage* other) {
  using std::swap;
  CastToBase(&auth_)->InternalSwap(CastToBase(&other->auth_));
  attacheddata_.Swap(&other->attacheddata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fromnodeid_, other->fromnodeid_);
  swap(msgid_, other->msgid_);
  swap(epochid_, other->epochid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PeerMessage::GetMetadata() const {
  protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CertificateMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CertificateMessage::kInitializedFieldNumber;
const int CertificateMessage::kCntPreparedFieldNumber;
const int CertificateMessage::kCertificatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CertificateMessage::CertificateMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_peer_2eproto::scc_info_CertificateMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bftmessages.CertificateMessage)
}
CertificateMessage::CertificateMessage(const CertificateMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      certificates_(from.certificates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&initialized_, &from.initialized_,
    static_cast<size_t>(reinterpret_cast<char*>(&cntprepared_) -
    reinterpret_cast<char*>(&initialized_)) + sizeof(cntprepared_));
  // @@protoc_insertion_point(copy_constructor:bftmessages.CertificateMessage)
}

void CertificateMessage::SharedCtor() {
  ::memset(&initialized_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cntprepared_) -
      reinterpret_cast<char*>(&initialized_)) + sizeof(cntprepared_));
}

CertificateMessage::~CertificateMessage() {
  // @@protoc_insertion_point(destructor:bftmessages.CertificateMessage)
  SharedDtor();
}

void CertificateMessage::SharedDtor() {
}

void CertificateMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CertificateMessage::descriptor() {
  ::protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CertificateMessage& CertificateMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_peer_2eproto::scc_info_CertificateMessage.base);
  return *internal_default_instance();
}


void CertificateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:bftmessages.CertificateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  certificates_.Clear();
  ::memset(&initialized_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cntprepared_) -
      reinterpret_cast<char*>(&initialized_)) + sizeof(cntprepared_));
  _internal_metadata_.Clear();
}

bool CertificateMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bftmessages.CertificateMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool initialized = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initialized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cntPrepared = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cntprepared_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bftmessages.PeerMessage certificates = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_certificates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bftmessages.CertificateMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bftmessages.CertificateMessage)
  return false;
#undef DO_
}

void CertificateMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bftmessages.CertificateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool initialized = 1;
  if (this->initialized() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->initialized(), output);
  }

  // int32 cntPrepared = 2;
  if (this->cntprepared() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cntprepared(), output);
  }

  // repeated .bftmessages.PeerMessage certificates = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->certificates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->certificates(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bftmessages.CertificateMessage)
}

::google::protobuf::uint8* CertificateMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bftmessages.CertificateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool initialized = 1;
  if (this->initialized() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->initialized(), target);
  }

  // int32 cntPrepared = 2;
  if (this->cntprepared() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cntprepared(), target);
  }

  // repeated .bftmessages.PeerMessage certificates = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->certificates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->certificates(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bftmessages.CertificateMessage)
  return target;
}

size_t CertificateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bftmessages.CertificateMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bftmessages.PeerMessage certificates = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->certificates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->certificates(static_cast<int>(i)));
    }
  }

  // bool initialized = 1;
  if (this->initialized() != 0) {
    total_size += 1 + 1;
  }

  // int32 cntPrepared = 2;
  if (this->cntprepared() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cntprepared());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CertificateMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bftmessages.CertificateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CertificateMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CertificateMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bftmessages.CertificateMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bftmessages.CertificateMessage)
    MergeFrom(*source);
  }
}

void CertificateMessage::MergeFrom(const CertificateMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bftmessages.CertificateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  certificates_.MergeFrom(from.certificates_);
  if (from.initialized() != 0) {
    set_initialized(from.initialized());
  }
  if (from.cntprepared() != 0) {
    set_cntprepared(from.cntprepared());
  }
}

void CertificateMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bftmessages.CertificateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CertificateMessage::CopyFrom(const CertificateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bftmessages.CertificateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CertificateMessage::IsInitialized() const {
  return true;
}

void CertificateMessage::Swap(CertificateMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CertificateMessage::InternalSwap(CertificateMessage* other) {
  using std::swap;
  CastToBase(&certificates_)->InternalSwap(CastToBase(&other->certificates_));
  swap(initialized_, other->initialized_);
  swap(cntprepared_, other->cntprepared_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CertificateMessage::GetMetadata() const {
  protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PayloadNewConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PayloadNewConfig::kMembersFieldNumber;
const int PayloadNewConfig::kLeaderFieldNumber;
const int PayloadNewConfig::kDigestStateFieldNumber;
const int PayloadNewConfig::kDigestPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PayloadNewConfig::PayloadNewConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_peer_2eproto::scc_info_PayloadNewConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bftmessages.PayloadNewConfig)
}
PayloadNewConfig::PayloadNewConfig(const PayloadNewConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  digeststate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.digeststate().size() > 0) {
    digeststate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digeststate_);
  }
  digestp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.digestp().size() > 0) {
    digestp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digestp_);
  }
  leader_ = from.leader_;
  // @@protoc_insertion_point(copy_constructor:bftmessages.PayloadNewConfig)
}

void PayloadNewConfig::SharedCtor() {
  digeststate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digestp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_ = 0;
}

PayloadNewConfig::~PayloadNewConfig() {
  // @@protoc_insertion_point(destructor:bftmessages.PayloadNewConfig)
  SharedDtor();
}

void PayloadNewConfig::SharedDtor() {
  digeststate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digestp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PayloadNewConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PayloadNewConfig::descriptor() {
  ::protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PayloadNewConfig& PayloadNewConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_peer_2eproto::scc_info_PayloadNewConfig.base);
  return *internal_default_instance();
}


void PayloadNewConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:bftmessages.PayloadNewConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  digeststate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digestp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_ = 0;
  _internal_metadata_.Clear();
}

bool PayloadNewConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bftmessages.PayloadNewConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 members = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_members())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_members())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 leader = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes digestState = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_digeststate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes digestP = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_digestp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bftmessages.PayloadNewConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bftmessages.PayloadNewConfig)
  return false;
#undef DO_
}

void PayloadNewConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bftmessages.PayloadNewConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 members = 1;
  if (this->members_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _members_cached_byte_size_));
  }
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->members(i), output);
  }

  // int32 leader = 2;
  if (this->leader() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leader(), output);
  }

  // bytes digestState = 3;
  if (this->digeststate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->digeststate(), output);
  }

  // bytes digestP = 4;
  if (this->digestp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->digestp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bftmessages.PayloadNewConfig)
}

::google::protobuf::uint8* PayloadNewConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bftmessages.PayloadNewConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 members = 1;
  if (this->members_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _members_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->members_, target);
  }

  // int32 leader = 2;
  if (this->leader() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leader(), target);
  }

  // bytes digestState = 3;
  if (this->digeststate().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->digeststate(), target);
  }

  // bytes digestP = 4;
  if (this->digestp().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->digestp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bftmessages.PayloadNewConfig)
  return target;
}

size_t PayloadNewConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bftmessages.PayloadNewConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 members = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->members_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _members_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes digestState = 3;
  if (this->digeststate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->digeststate());
  }

  // bytes digestP = 4;
  if (this->digestp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->digestp());
  }

  // int32 leader = 2;
  if (this->leader() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->leader());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PayloadNewConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bftmessages.PayloadNewConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PayloadNewConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PayloadNewConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bftmessages.PayloadNewConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bftmessages.PayloadNewConfig)
    MergeFrom(*source);
  }
}

void PayloadNewConfig::MergeFrom(const PayloadNewConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bftmessages.PayloadNewConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.digeststate().size() > 0) {

    digeststate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digeststate_);
  }
  if (from.digestp().size() > 0) {

    digestp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digestp_);
  }
  if (from.leader() != 0) {
    set_leader(from.leader());
  }
}

void PayloadNewConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bftmessages.PayloadNewConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayloadNewConfig::CopyFrom(const PayloadNewConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bftmessages.PayloadNewConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayloadNewConfig::IsInitialized() const {
  return true;
}

void PayloadNewConfig::Swap(PayloadNewConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PayloadNewConfig::InternalSwap(PayloadNewConfig* other) {
  using std::swap;
  members_.InternalSwap(&other->members_);
  digeststate_.Swap(&other->digeststate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  digestp_.Swap(&other->digestp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(leader_, other->leader_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PayloadNewConfig::GetMetadata() const {
  protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PayloadSyncState::InitAsDefaultInstance() {
  ::bftmessages::_PayloadSyncState_default_instance_._instance.get_mutable()->certificate_ = const_cast< ::bftmessages::CertificateMessage*>(
      ::bftmessages::CertificateMessage::internal_default_instance());
  ::bftmessages::_PayloadSyncState_default_instance_._instance.get_mutable()->newconfigmessage_ = const_cast< ::bftmessages::PeerMessage*>(
      ::bftmessages::PeerMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PayloadSyncState::kClientsFieldNumber;
const int PayloadSyncState::kCertificateFieldNumber;
const int PayloadSyncState::kNewConfigMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PayloadSyncState::PayloadSyncState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_peer_2eproto::scc_info_PayloadSyncState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bftmessages.PayloadSyncState)
}
PayloadSyncState::PayloadSyncState(const PayloadSyncState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clients_(from.clients_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_certificate()) {
    certificate_ = new ::bftmessages::CertificateMessage(*from.certificate_);
  } else {
    certificate_ = NULL;
  }
  if (from.has_newconfigmessage()) {
    newconfigmessage_ = new ::bftmessages::PeerMessage(*from.newconfigmessage_);
  } else {
    newconfigmessage_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bftmessages.PayloadSyncState)
}

void PayloadSyncState::SharedCtor() {
  ::memset(&certificate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newconfigmessage_) -
      reinterpret_cast<char*>(&certificate_)) + sizeof(newconfigmessage_));
}

PayloadSyncState::~PayloadSyncState() {
  // @@protoc_insertion_point(destructor:bftmessages.PayloadSyncState)
  SharedDtor();
}

void PayloadSyncState::SharedDtor() {
  if (this != internal_default_instance()) delete certificate_;
  if (this != internal_default_instance()) delete newconfigmessage_;
}

void PayloadSyncState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PayloadSyncState::descriptor() {
  ::protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PayloadSyncState& PayloadSyncState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_peer_2eproto::scc_info_PayloadSyncState.base);
  return *internal_default_instance();
}


void PayloadSyncState::Clear() {
// @@protoc_insertion_point(message_clear_start:bftmessages.PayloadSyncState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clients_.Clear();
  if (GetArenaNoVirtual() == NULL && certificate_ != NULL) {
    delete certificate_;
  }
  certificate_ = NULL;
  if (GetArenaNoVirtual() == NULL && newconfigmessage_ != NULL) {
    delete newconfigmessage_;
  }
  newconfigmessage_ = NULL;
  _internal_metadata_.Clear();
}

bool PayloadSyncState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bftmessages.PayloadSyncState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 clients = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_clients())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_clients())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bftmessages.CertificateMessage certificate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_certificate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bftmessages.PeerMessage newConfigMessage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_newconfigmessage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bftmessages.PayloadSyncState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bftmessages.PayloadSyncState)
  return false;
#undef DO_
}

void PayloadSyncState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bftmessages.PayloadSyncState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 clients = 1;
  if (this->clients_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _clients_cached_byte_size_));
  }
  for (int i = 0, n = this->clients_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->clients(i), output);
  }

  // .bftmessages.CertificateMessage certificate = 2;
  if (this->has_certificate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_certificate(), output);
  }

  // .bftmessages.PeerMessage newConfigMessage = 3;
  if (this->has_newconfigmessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_newconfigmessage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bftmessages.PayloadSyncState)
}

::google::protobuf::uint8* PayloadSyncState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bftmessages.PayloadSyncState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 clients = 1;
  if (this->clients_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _clients_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->clients_, target);
  }

  // .bftmessages.CertificateMessage certificate = 2;
  if (this->has_certificate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_certificate(), deterministic, target);
  }

  // .bftmessages.PeerMessage newConfigMessage = 3;
  if (this->has_newconfigmessage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_newconfigmessage(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bftmessages.PayloadSyncState)
  return target;
}

size_t PayloadSyncState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bftmessages.PayloadSyncState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 clients = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->clients_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _clients_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .bftmessages.CertificateMessage certificate = 2;
  if (this->has_certificate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *certificate_);
  }

  // .bftmessages.PeerMessage newConfigMessage = 3;
  if (this->has_newconfigmessage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *newconfigmessage_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PayloadSyncState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bftmessages.PayloadSyncState)
  GOOGLE_DCHECK_NE(&from, this);
  const PayloadSyncState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PayloadSyncState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bftmessages.PayloadSyncState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bftmessages.PayloadSyncState)
    MergeFrom(*source);
  }
}

void PayloadSyncState::MergeFrom(const PayloadSyncState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bftmessages.PayloadSyncState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clients_.MergeFrom(from.clients_);
  if (from.has_certificate()) {
    mutable_certificate()->::bftmessages::CertificateMessage::MergeFrom(from.certificate());
  }
  if (from.has_newconfigmessage()) {
    mutable_newconfigmessage()->::bftmessages::PeerMessage::MergeFrom(from.newconfigmessage());
  }
}

void PayloadSyncState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bftmessages.PayloadSyncState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayloadSyncState::CopyFrom(const PayloadSyncState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bftmessages.PayloadSyncState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayloadSyncState::IsInitialized() const {
  return true;
}

void PayloadSyncState::Swap(PayloadSyncState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PayloadSyncState::InternalSwap(PayloadSyncState* other) {
  using std::swap;
  clients_.InternalSwap(&other->clients_);
  swap(certificate_, other->certificate_);
  swap(newconfigmessage_, other->newconfigmessage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PayloadSyncState::GetMetadata() const {
  protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigMessage::kBasePortFieldNumber;
const int ConfigMessage::kNodeCountFieldNumber;
const int ConfigMessage::kRolesFieldNumber;
const int ConfigMessage::kAddressesFieldNumber;
const int ConfigMessage::kBasePortsFieldNumber;
const int ConfigMessage::kOutgoingDoHashFieldNumber;
const int ConfigMessage::kOutgoingDoSignFieldNumber;
const int ConfigMessage::kIncomingDoHashFieldNumber;
const int ConfigMessage::kIncomingVerifySignFieldNumber;
const int ConfigMessage::kHashAlgFieldNumber;
const int ConfigMessage::kSignAlgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigMessage::ConfigMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_peer_2eproto::scc_info_ConfigMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bftmessages.ConfigMessage)
}
ConfigMessage::ConfigMessage(const ConfigMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roles_(from.roles_),
      addresses_(from.addresses_),
      baseports_(from.baseports_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hashalg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashalg().size() > 0) {
    hashalg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashalg_);
  }
  signalg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signalg().size() > 0) {
    signalg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signalg_);
  }
  ::memcpy(&baseport_, &from.baseport_,
    static_cast<size_t>(reinterpret_cast<char*>(&incomingverifysign_) -
    reinterpret_cast<char*>(&baseport_)) + sizeof(incomingverifysign_));
  // @@protoc_insertion_point(copy_constructor:bftmessages.ConfigMessage)
}

void ConfigMessage::SharedCtor() {
  hashalg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signalg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&incomingverifysign_) -
      reinterpret_cast<char*>(&baseport_)) + sizeof(incomingverifysign_));
}

ConfigMessage::~ConfigMessage() {
  // @@protoc_insertion_point(destructor:bftmessages.ConfigMessage)
  SharedDtor();
}

void ConfigMessage::SharedDtor() {
  hashalg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signalg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigMessage::descriptor() {
  ::protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigMessage& ConfigMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_peer_2eproto::scc_info_ConfigMessage.base);
  return *internal_default_instance();
}


void ConfigMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:bftmessages.ConfigMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  addresses_.Clear();
  baseports_.Clear();
  hashalg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signalg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&incomingverifysign_) -
      reinterpret_cast<char*>(&baseport_)) + sizeof(incomingverifysign_));
  _internal_metadata_.Clear();
}

bool ConfigMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bftmessages.ConfigMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 basePort = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &baseport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nodeCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 roles = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_roles())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_roles())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string addresses = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_addresses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addresses(this->addresses_size() - 1).data(),
            static_cast<int>(this->addresses(this->addresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bftmessages.ConfigMessage.addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 basePorts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_baseports())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_baseports())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool outgoingDoHash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &outgoingdohash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool outgoingDoSign = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &outgoingdosign_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool incomingDoHash = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &incomingdohash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool incomingVerifySign = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &incomingverifysign_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hashAlg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashalg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hashalg().data(), static_cast<int>(this->hashalg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bftmessages.ConfigMessage.hashAlg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signAlg = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signalg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signalg().data(), static_cast<int>(this->signalg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bftmessages.ConfigMessage.signAlg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bftmessages.ConfigMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bftmessages.ConfigMessage)
  return false;
#undef DO_
}

void ConfigMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bftmessages.ConfigMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 basePort = 1;
  if (this->baseport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->baseport(), output);
  }

  // int32 nodeCount = 2;
  if (this->nodecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodecount(), output);
  }

  // repeated int32 roles = 3;
  if (this->roles_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _roles_cached_byte_size_));
  }
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->roles(i), output);
  }

  // repeated string addresses = 4;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bftmessages.ConfigMessage.addresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->addresses(i), output);
  }

  // repeated int32 basePorts = 5;
  if (this->baseports_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _baseports_cached_byte_size_));
  }
  for (int i = 0, n = this->baseports_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->baseports(i), output);
  }

  // bool outgoingDoHash = 6;
  if (this->outgoingdohash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->outgoingdohash(), output);
  }

  // bool outgoingDoSign = 7;
  if (this->outgoingdosign() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->outgoingdosign(), output);
  }

  // bool incomingDoHash = 8;
  if (this->incomingdohash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->incomingdohash(), output);
  }

  // bool incomingVerifySign = 9;
  if (this->incomingverifysign() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->incomingverifysign(), output);
  }

  // string hashAlg = 10;
  if (this->hashalg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashalg().data(), static_cast<int>(this->hashalg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bftmessages.ConfigMessage.hashAlg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->hashalg(), output);
  }

  // string signAlg = 11;
  if (this->signalg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signalg().data(), static_cast<int>(this->signalg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bftmessages.ConfigMessage.signAlg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->signalg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bftmessages.ConfigMessage)
}

::google::protobuf::uint8* ConfigMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bftmessages.ConfigMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 basePort = 1;
  if (this->baseport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->baseport(), target);
  }

  // int32 nodeCount = 2;
  if (this->nodecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodecount(), target);
  }

  // repeated int32 roles = 3;
  if (this->roles_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _roles_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->roles_, target);
  }

  // repeated string addresses = 4;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bftmessages.ConfigMessage.addresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->addresses(i), target);
  }

  // repeated int32 basePorts = 5;
  if (this->baseports_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _baseports_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->baseports_, target);
  }

  // bool outgoingDoHash = 6;
  if (this->outgoingdohash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->outgoingdohash(), target);
  }

  // bool outgoingDoSign = 7;
  if (this->outgoingdosign() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->outgoingdosign(), target);
  }

  // bool incomingDoHash = 8;
  if (this->incomingdohash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->incomingdohash(), target);
  }

  // bool incomingVerifySign = 9;
  if (this->incomingverifysign() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->incomingverifysign(), target);
  }

  // string hashAlg = 10;
  if (this->hashalg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashalg().data(), static_cast<int>(this->hashalg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bftmessages.ConfigMessage.hashAlg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->hashalg(), target);
  }

  // string signAlg = 11;
  if (this->signalg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signalg().data(), static_cast<int>(this->signalg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bftmessages.ConfigMessage.signAlg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->signalg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bftmessages.ConfigMessage)
  return target;
}

size_t ConfigMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bftmessages.ConfigMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 roles = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->roles_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roles_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string addresses = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->addresses_size());
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->addresses(i));
  }

  // repeated int32 basePorts = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->baseports_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _baseports_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string hashAlg = 10;
  if (this->hashalg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hashalg());
  }

  // string signAlg = 11;
  if (this->signalg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signalg());
  }

  // int32 basePort = 1;
  if (this->baseport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->baseport());
  }

  // int32 nodeCount = 2;
  if (this->nodecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nodecount());
  }

  // bool outgoingDoHash = 6;
  if (this->outgoingdohash() != 0) {
    total_size += 1 + 1;
  }

  // bool outgoingDoSign = 7;
  if (this->outgoingdosign() != 0) {
    total_size += 1 + 1;
  }

  // bool incomingDoHash = 8;
  if (this->incomingdohash() != 0) {
    total_size += 1 + 1;
  }

  // bool incomingVerifySign = 9;
  if (this->incomingverifysign() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bftmessages.ConfigMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bftmessages.ConfigMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bftmessages.ConfigMessage)
    MergeFrom(*source);
  }
}

void ConfigMessage::MergeFrom(const ConfigMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bftmessages.ConfigMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  addresses_.MergeFrom(from.addresses_);
  baseports_.MergeFrom(from.baseports_);
  if (from.hashalg().size() > 0) {

    hashalg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashalg_);
  }
  if (from.signalg().size() > 0) {

    signalg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signalg_);
  }
  if (from.baseport() != 0) {
    set_baseport(from.baseport());
  }
  if (from.nodecount() != 0) {
    set_nodecount(from.nodecount());
  }
  if (from.outgoingdohash() != 0) {
    set_outgoingdohash(from.outgoingdohash());
  }
  if (from.outgoingdosign() != 0) {
    set_outgoingdosign(from.outgoingdosign());
  }
  if (from.incomingdohash() != 0) {
    set_incomingdohash(from.incomingdohash());
  }
  if (from.incomingverifysign() != 0) {
    set_incomingverifysign(from.incomingverifysign());
  }
}

void ConfigMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bftmessages.ConfigMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigMessage::CopyFrom(const ConfigMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bftmessages.ConfigMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigMessage::IsInitialized() const {
  return true;
}

void ConfigMessage::Swap(ConfigMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigMessage::InternalSwap(ConfigMessage* other) {
  using std::swap;
  roles_.InternalSwap(&other->roles_);
  addresses_.InternalSwap(CastToBase(&other->addresses_));
  baseports_.InternalSwap(&other->baseports_);
  hashalg_.Swap(&other->hashalg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signalg_.Swap(&other->signalg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseport_, other->baseport_);
  swap(nodecount_, other->nodecount_);
  swap(outgoingdohash_, other->outgoingdohash_);
  swap(outgoingdosign_, other->outgoingdosign_);
  swap(incomingdohash_, other->incomingdohash_);
  swap(incomingverifysign_, other->incomingverifysign_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigMessage::GetMetadata() const {
  protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendMessage::InitAsDefaultInstance() {
  ::bftmessages::_SendMessage_default_instance_._instance.get_mutable()->message_ = const_cast< ::bftmessages::PeerMessage*>(
      ::bftmessages::PeerMessage::internal_default_instance());
}
void SendMessage::clear_signs() {
  signs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMessage::kNodeIdFieldNumber;
const int SendMessage::kMessageFieldNumber;
const int SendMessage::kHashFieldNumber;
const int SendMessage::kSignsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMessage::SendMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_peer_2eproto::scc_info_SendMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bftmessages.SendMessage)
}
SendMessage::SendMessage(const SendMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodeid_(from.nodeid_),
      signs_(from.signs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_message()) {
    message_ = new ::bftmessages::PeerMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bftmessages.SendMessage)
}

void SendMessage::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = NULL;
}

SendMessage::~SendMessage() {
  // @@protoc_insertion_point(destructor:bftmessages.SendMessage)
  SharedDtor();
}

void SendMessage::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete message_;
}

void SendMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendMessage::descriptor() {
  ::protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendMessage& SendMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_peer_2eproto::scc_info_SendMessage.base);
  return *internal_default_instance();
}


void SendMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:bftmessages.SendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodeid_.Clear();
  signs_.Clear();
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool SendMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bftmessages.SendMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 nodeId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nodeid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_nodeid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bftmessages.PeerMessage message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bftmessages.Authenticator signs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_signs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bftmessages.SendMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bftmessages.SendMessage)
  return false;
#undef DO_
}

void SendMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bftmessages.SendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 nodeId = 1;
  if (this->nodeid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nodeid_cached_byte_size_));
  }
  for (int i = 0, n = this->nodeid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->nodeid(i), output);
  }

  // .bftmessages.PeerMessage message = 2;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_message(), output);
  }

  // bytes hash = 3;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->hash(), output);
  }

  // repeated .bftmessages.Authenticator signs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->signs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bftmessages.SendMessage)
}

::google::protobuf::uint8* SendMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bftmessages.SendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 nodeId = 1;
  if (this->nodeid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nodeid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->nodeid_, target);
  }

  // .bftmessages.PeerMessage message = 2;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_message(), deterministic, target);
  }

  // bytes hash = 3;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->hash(), target);
  }

  // repeated .bftmessages.Authenticator signs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->signs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bftmessages.SendMessage)
  return target;
}

size_t SendMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bftmessages.SendMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 nodeId = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->nodeid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nodeid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .bftmessages.Authenticator signs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->signs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->signs(static_cast<int>(i)));
    }
  }

  // bytes hash = 3;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // .bftmessages.PeerMessage message = 2;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bftmessages.SendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SendMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bftmessages.SendMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bftmessages.SendMessage)
    MergeFrom(*source);
  }
}

void SendMessage::MergeFrom(const SendMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bftmessages.SendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodeid_.MergeFrom(from.nodeid_);
  signs_.MergeFrom(from.signs_);
  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_message()) {
    mutable_message()->::bftmessages::PeerMessage::MergeFrom(from.message());
  }
}

void SendMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bftmessages.SendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMessage::CopyFrom(const SendMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bftmessages.SendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessage::IsInitialized() const {
  return true;
}

void SendMessage::Swap(SendMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMessage::InternalSwap(SendMessage* other) {
  using std::swap;
  nodeid_.InternalSwap(&other->nodeid_);
  CastToBase(&signs_)->InternalSwap(CastToBase(&other->signs_));
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendMessage::GetMetadata() const {
  protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReceivedMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReceivedMessage::kChannelFieldNumber;
const int ReceivedMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReceivedMessage::ReceivedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_peer_2eproto::scc_info_ReceivedMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bftmessages.ReceivedMessage)
}
ReceivedMessage::ReceivedMessage(const ReceivedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:bftmessages.ReceivedMessage)
}

void ReceivedMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
}

ReceivedMessage::~ReceivedMessage() {
  // @@protoc_insertion_point(destructor:bftmessages.ReceivedMessage)
  SharedDtor();
}

void ReceivedMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReceivedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReceivedMessage::descriptor() {
  ::protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReceivedMessage& ReceivedMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_peer_2eproto::scc_info_ReceivedMessage.base);
  return *internal_default_instance();
}


void ReceivedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:bftmessages.ReceivedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  _internal_metadata_.Clear();
}

bool ReceivedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bftmessages.ReceivedMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bftmessages.ReceivedChannel channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_channel(static_cast< ::bftmessages::ReceivedChannel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bftmessages.ReceivedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bftmessages.ReceivedMessage)
  return false;
#undef DO_
}

void ReceivedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bftmessages.ReceivedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bftmessages.ReceivedChannel channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->channel(), output);
  }

  // bytes message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bftmessages.ReceivedMessage)
}

::google::protobuf::uint8* ReceivedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bftmessages.ReceivedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bftmessages.ReceivedChannel channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->channel(), target);
  }

  // bytes message = 2;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bftmessages.ReceivedMessage)
  return target;
}

size_t ReceivedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bftmessages.ReceivedMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // .bftmessages.ReceivedChannel channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReceivedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bftmessages.ReceivedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ReceivedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReceivedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bftmessages.ReceivedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bftmessages.ReceivedMessage)
    MergeFrom(*source);
  }
}

void ReceivedMessage::MergeFrom(const ReceivedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bftmessages.ReceivedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void ReceivedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bftmessages.ReceivedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceivedMessage::CopyFrom(const ReceivedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bftmessages.ReceivedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceivedMessage::IsInitialized() const {
  return true;
}

void ReceivedMessage::Swap(ReceivedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReceivedMessage::InternalSwap(ReceivedMessage* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReceivedMessage::GetMetadata() const {
  protobuf_peer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_peer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bftmessages
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bftmessages::PeerMessage* Arena::CreateMaybeMessage< ::bftmessages::PeerMessage >(Arena* arena) {
  return Arena::CreateInternal< ::bftmessages::PeerMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bftmessages::CertificateMessage* Arena::CreateMaybeMessage< ::bftmessages::CertificateMessage >(Arena* arena) {
  return Arena::CreateInternal< ::bftmessages::CertificateMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bftmessages::PayloadNewConfig* Arena::CreateMaybeMessage< ::bftmessages::PayloadNewConfig >(Arena* arena) {
  return Arena::CreateInternal< ::bftmessages::PayloadNewConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bftmessages::PayloadSyncState* Arena::CreateMaybeMessage< ::bftmessages::PayloadSyncState >(Arena* arena) {
  return Arena::CreateInternal< ::bftmessages::PayloadSyncState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bftmessages::ConfigMessage* Arena::CreateMaybeMessage< ::bftmessages::ConfigMessage >(Arena* arena) {
  return Arena::CreateInternal< ::bftmessages::ConfigMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bftmessages::SendMessage* Arena::CreateMaybeMessage< ::bftmessages::SendMessage >(Arena* arena) {
  return Arena::CreateInternal< ::bftmessages::SendMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bftmessages::ReceivedMessage* Arena::CreateMaybeMessage< ::bftmessages::ReceivedMessage >(Arena* arena) {
  return Arena::CreateInternal< ::bftmessages::ReceivedMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
